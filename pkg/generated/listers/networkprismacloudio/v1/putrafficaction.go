/*
Copyright 2021.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "go.aporeto.io/gaia-k8s/pkg/apis/networkprismacloudio/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PUTrafficActionLister helps list PUTrafficActions.
// All objects returned here must be treated as read-only.
type PUTrafficActionLister interface {
	// List lists all PUTrafficActions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.PUTrafficAction, err error)
	// PUTrafficActions returns an object that can list and get PUTrafficActions.
	PUTrafficActions(namespace string) PUTrafficActionNamespaceLister
	PUTrafficActionListerExpansion
}

// pUTrafficActionLister implements the PUTrafficActionLister interface.
type pUTrafficActionLister struct {
	indexer cache.Indexer
}

// NewPUTrafficActionLister returns a new PUTrafficActionLister.
func NewPUTrafficActionLister(indexer cache.Indexer) PUTrafficActionLister {
	return &pUTrafficActionLister{indexer: indexer}
}

// List lists all PUTrafficActions in the indexer.
func (s *pUTrafficActionLister) List(selector labels.Selector) (ret []*v1.PUTrafficAction, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.PUTrafficAction))
	})
	return ret, err
}

// PUTrafficActions returns an object that can list and get PUTrafficActions.
func (s *pUTrafficActionLister) PUTrafficActions(namespace string) PUTrafficActionNamespaceLister {
	return pUTrafficActionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PUTrafficActionNamespaceLister helps list and get PUTrafficActions.
// All objects returned here must be treated as read-only.
type PUTrafficActionNamespaceLister interface {
	// List lists all PUTrafficActions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.PUTrafficAction, err error)
	// Get retrieves the PUTrafficAction from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.PUTrafficAction, error)
	PUTrafficActionNamespaceListerExpansion
}

// pUTrafficActionNamespaceLister implements the PUTrafficActionNamespaceLister
// interface.
type pUTrafficActionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PUTrafficActions in the indexer for a given namespace.
func (s pUTrafficActionNamespaceLister) List(selector labels.Selector) (ret []*v1.PUTrafficAction, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.PUTrafficAction))
	})
	return ret, err
}

// Get retrieves the PUTrafficAction from the indexer for a given namespace and name.
func (s pUTrafficActionNamespaceLister) Get(name string) (*v1.PUTrafficAction, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("putrafficaction"), name)
	}
	return obj.(*v1.PUTrafficAction), nil
}
